Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o (exit)
/usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_clear_bss.o)
                              shared.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

CurrentP            0x2               shared.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000100000 xr
data             0x0000000000800200 0x000000000000fe00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/libm.a
LOAD LED_Test.o
LOAD shared.o
LOAD cswitch.o
LOAD /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x422
 *(.vectors)
 .vectors       0x0000000000000000       0xe4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000000000000e4                . = ALIGN (0x2)
                0x00000000000000e4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000e4        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000e4                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000e4                __ctors_start = .
 *(.ctors)
                0x00000000000000e4                __ctors_end = .
                0x00000000000000e4                __dtors_start = .
 *(.dtors)
                0x00000000000000e4                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000e4        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
                0x00000000000000e4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000e4       0x10 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000f4       0x10 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_clear_bss.o)
                0x00000000000000f4                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000104        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
 *(.init9)
 *(.text)
 .text          0x000000000000010c        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
                0x000000000000010c                __vector_38
                0x000000000000010c                __vector_22
                0x000000000000010c                __vector_28
                0x000000000000010c                __vector_1
                0x000000000000010c                __vector_32
                0x000000000000010c                __vector_34
                0x000000000000010c                __vector_24
                0x000000000000010c                __vector_12
                0x000000000000010c                __vector_55
                0x000000000000010c                __vector_46
                0x000000000000010c                __bad_interrupt
                0x000000000000010c                __vector_6
                0x000000000000010c                __vector_31
                0x000000000000010c                __vector_35
                0x000000000000010c                __vector_39
                0x000000000000010c                __vector_3
                0x000000000000010c                __vector_23
                0x000000000000010c                __vector_30
                0x000000000000010c                __vector_45
                0x000000000000010c                __vector_25
                0x000000000000010c                __vector_11
                0x000000000000010c                __vector_54
                0x000000000000010c                __vector_13
                0x000000000000010c                __vector_17
                0x000000000000010c                __vector_19
                0x000000000000010c                __vector_56
                0x000000000000010c                __vector_7
                0x000000000000010c                __vector_49
                0x000000000000010c                __vector_41
                0x000000000000010c                __vector_43
                0x000000000000010c                __vector_27
                0x000000000000010c                __vector_5
                0x000000000000010c                __vector_33
                0x000000000000010c                __vector_47
                0x000000000000010c                __vector_52
                0x000000000000010c                __vector_37
                0x000000000000010c                __vector_4
                0x000000000000010c                __vector_44
                0x000000000000010c                __vector_51
                0x000000000000010c                __vector_9
                0x000000000000010c                __vector_2
                0x000000000000010c                __vector_21
                0x000000000000010c                __vector_15
                0x000000000000010c                __vector_36
                0x000000000000010c                __vector_29
                0x000000000000010c                __vector_40
                0x000000000000010c                __vector_8
                0x000000000000010c                __vector_26
                0x000000000000010c                __vector_48
                0x000000000000010c                __vector_14
                0x000000000000010c                __vector_53
                0x000000000000010c                __vector_10
                0x000000000000010c                __vector_50
                0x000000000000010c                __vector_16
                0x000000000000010c                __vector_18
                0x000000000000010c                __vector_20
                0x000000000000010c                __vector_42
 .text          0x0000000000000110       0x1c LED_Test.o
                0x0000000000000110                init_LED_D2
                0x000000000000011a                init_LED_D5
                0x0000000000000124                enable_LED
                0x0000000000000128                disable_LEDs
 .text          0x000000000000012c      0x244 shared.o
                0x000000000000012c                Task_Terminate
                0x000000000000014e                Kernel_Create_Task_At
                0x00000000000001b4                Dispatch
                0x0000000000000238                OS_Init
                0x000000000000027a                OS_Start
                0x00000000000002a6                Task_Create
                0x0000000000000304                Task_Next
                0x000000000000032a                Pong
                0x0000000000000340                Ping
                0x0000000000000356                main
 .text          0x0000000000000370       0xae cswitch.o
                0x0000000000000370                CSwitch
                0x00000000000003c4                Exit_Kernel
 .text          0x000000000000041e        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_exit.o)
 .text          0x000000000000041e        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_clear_bss.o)
                0x000000000000041e                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000000000000041e        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000041e        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_clear_bss.o)
                0x000000000000041e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000041e        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_exit.o)
                0x000000000000041e                exit
                0x000000000000041e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000041e        0x4 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000422                _etext = .

.data           0x0000000000800200        0x0 load address 0x0000000000000422
                0x0000000000800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
 .data          0x0000000000800200        0x0 LED_Test.o
 .data          0x0000000000800200        0x0 shared.o
 .data          0x0000000000800200        0x0 cswitch.o
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_exit.o)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800200                . = ALIGN (0x2)
                0x0000000000800200                _edata = .
                0x0000000000800200                PROVIDE (__data_end, .)

.bss            0x0000000000800200      0x414
                0x0000000000800200                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800200        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
 .bss           0x0000000000800200        0x0 LED_Test.o
 .bss           0x0000000000800200      0x412 shared.o
 .bss           0x0000000000800612        0x0 cswitch.o
 .bss           0x0000000000800612        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_exit.o)
 .bss           0x0000000000800612        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800612        0x2 shared.o
                0x0000000000800612                CurrentP
                0x0000000000800614                PROVIDE (__bss_end, .)
                0x0000000000000422                __data_load_start = LOADADDR (.data)
                0x0000000000000422                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800614        0x0
                0x0000000000800614                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800614                PROVIDE (__noinit_end, .)
                0x0000000000800614                _end = .
                0x0000000000800614                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x1344
 *(.stab)
 .stab          0x0000000000000000      0x6e4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
 .stab          0x00000000000006e4      0x450 LED_Test.o
                                        0x45c (size before relaxing)
 .stab          0x0000000000000b34      0x738 shared.o
                                        0x744 (size before relaxing)
 .stab          0x000000000000126c       0xd8 cswitch.o
                                         0xe4 (size before relaxing)

.stabstr        0x0000000000000000      0xaf2
 *(.stabstr)
 .stabstr       0x0000000000000000      0xaf2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(project2.out elf32-avr)
LOAD linker stubs
